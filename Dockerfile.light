# Lightweight multi-stage Dockerfile for FastAPI + Express
FROM node:20-alpine AS node-builder

WORKDIR /app
COPY package*.json ./
RUN npm ci --production --silent && npm cache clean --force

FROM python:3.10-alpine AS final

# Install runtime dependencies
RUN apk add --no-cache \
    nodejs npm bash curl \
    python3-dev gcc musl-dev \
    jpeg-dev zlib-dev libffi-dev \
    && rm -rf /var/cache/apk/*

WORKDIR /app

# Copy Node.js dependencies
COPY --from=node-builder /app/node_modules ./node_modules
COPY --from=node-builder /app/package*.json ./

# Install Python dependencies
COPY api/requirements-minimal.txt ./api/requirements-minimal.txt
RUN pip install --no-cache-dir -r api/requirements-minimal.txt

# Install process management
RUN npm install -g concurrently

# Copy application files
COPY api/ ./api/
COPY server/ ./server/
COPY public/ ./public/

# Create lightweight startup script
RUN echo '#!/bin/bash\nset -e\necho "Starting services..."\nconcurrently "python -m uvicorn api.app:app --host 0.0.0.0 --port 8001" "cd server/routes && node server.js"' > /app/start.sh && chmod +x /app/start.sh

# Environment
ENV NODE_ENV=production
ENV PYTHONPATH=/app
ENV MODEL_DIR=/app/api/best_openvino_model
ENV API_URL=http://localhost:8001

EXPOSE 3000

CMD ["/app/start.sh"]