services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    restart: unless-stopped
    environment:
      - MODEL_DIR=/app/best_openvino_model
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
    volumes:
      - ./api/best_openvino_model:/app/best_openvino_model:ro

  web:
    build:
      context: .
      dockerfile: ./web/Dockerfile
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - api
    environment:
      - NODE_ENV=production
      - PORT=3000
      - API_URL=http://api:8000
      - SESSION_SECRET=${SESSION_SECRET:-your-secret-key-change-in-production}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: hazard-detection-network