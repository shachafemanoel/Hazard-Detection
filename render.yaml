services:
  # Frontend Web Service (Node.js/Express)
  - type: web
    name: hazard-detection-frontend
    env: node
    buildCommand: npm install && npm run build
    startCommand: npm start
    plan: free
    envVars:
      - key: NODE_ENV
        value: production
      - key: SESSION_SECRET
        generateValue: true
      - key: GOOGLE_CLIENT_ID
        sync: false  # Set this in Render dashboard
      - key: GOOGLE_CLIENT_SECRET
        sync: false  # Set this in Render dashboard
      - key: GOOGLE_CALLBACK_URL
        value: https://hazard-detection.onrender.com/auth/google/callback
      - key: SENDGRID_API_KEY
        sync: false  # Set this in Render dashboard
      - key: CLOUDINARY_CLOUD_NAME
        sync: false  # Set this in Render dashboard
      - key: CLOUDINARY_API_KEY
        sync: false  # Set this in Render dashboard
      - key: CLOUDINARY_API_SECRET
        sync: false  # Set this in Render dashboard
      - key: REDIS_HOST
        sync: false  # Set this in Render dashboard
      - key: REDIS_PORT
        value: "6380"
      - key: REDIS_PASSWORD
        sync: false  # Set this in Render dashboard
      - key: GOOGLE_GEOCODING_API_KEY
        sync: false  # Set this in Render dashboard

  # Backend API Service (Python/FastAPI)
  - type: web
    name: hazard-detection-backend
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: cd server && python app.py
    plan: free
    envVars:
      - key: PYTHONPATH
        value: /opt/render/project/src/server
      - key: PORT
        value: "8000"
      - key: RENDER
        value: "true"

# Database (Redis)
databases:
  - name: hazard-detection-redis
    plan: free