# Lightweight webhook-based deployment
FROM node:20-alpine as node-builder

WORKDIR /app
COPY package*.json ./
RUN npm ci --omit=dev && npm cache clean --force

# Final runtime stage with Python for webhooks
FROM python:3.10-alpine

# Install Node.js
RUN apk add --no-cache nodejs npm

WORKDIR /app

# Copy Node.js dependencies
COPY --from=node-builder /app/node_modules ./node_modules
COPY --from=node-builder /app/package*.json ./

# Install lightweight Python dependencies
COPY api/requirements-webhook.txt ./api/requirements-webhook.txt
RUN pip install --no-cache-dir -r api/requirements-webhook.txt

# Copy application files
COPY public/ ./public/
COPY server/ ./server/
COPY api/webhook_detector.py ./api/app.py
COPY api/api_connectors.py ./api/api_connectors.py

# Create start script for webhook version
RUN echo '#!/bin/sh' > start-webhook.sh && \
    echo 'echo "Starting webhook-based services..."' >> start-webhook.sh && \
    echo 'python3 -m uvicorn api.app:app --host 0.0.0.0 --port 8001 &' >> start-webhook.sh && \
    echo 'sleep 5' >> start-webhook.sh && \
    echo 'npm run start:web:full &' >> start-webhook.sh && \
    echo 'wait' >> start-webhook.sh && \
    chmod +x start-webhook.sh

# Set environment variables
ENV PORT=3000
ENV NODE_ENV=production
ENV PYTHONPATH=/app/api

EXPOSE 3000

CMD ["./start-webhook.sh"]